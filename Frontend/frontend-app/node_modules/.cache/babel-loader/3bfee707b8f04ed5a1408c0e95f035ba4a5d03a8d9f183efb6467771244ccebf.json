{"ast":null,"code":"// Tenant Information Helper\nexport const tenantInfo = {\n  tenantId: \"a7a43c95-55b0-4d14-98c5-a7478dfb87d3\",\n  clientId: \"9a2a5624-5ed7-4449-b2b0-e1862e68fdcc\",\n  organizationName: \"Nenasala Higher Education\",\n  // Common domains for this tenant\n  expectedDomains: [\"@nenasa.edu.lk\",\n  // Custom domain for NENASA\n  \"@yourdomain.onmicrosoft.com\",\n  // Replace with your actual domain\n  \"@yourdomain.com\" // If you have a custom domain\n  ],\n  // Check if email belongs to this tenant\n  isValidTenantEmail: email => {\n    if (!email) return false;\n    return tenantInfo.expectedDomains.some(domain => email.toLowerCase().endsWith(domain.toLowerCase()));\n  },\n  // Get tenant login URL\n  getTenantLoginUrl: () => {\n    return `https://login.microsoftonline.com/${tenantInfo.tenantId}`;\n  },\n  // Get Azure portal URL for this tenant\n  getAzurePortalUrl: () => {\n    return `https://portal.azure.com/#@${tenantInfo.tenantId}`;\n  }\n};\n\n// Instructions for adding users\nexport const userManagementInstructions = {\n  addInternalUser: [\"1. Go to https://portal.azure.com\", \"2. Navigate to Azure Active Directory\", \"3. Click Users → All users → + New user → Create user\", \"4. Fill in user details with @yourdomain.onmicrosoft.com email\", \"5. Assign appropriate licenses and groups\"],\n  addExternalUser: [\"1. Go to https://portal.azure.com\", \"2. Navigate to Azure Active Directory\", \"3. Click Users → All users → + New user → Invite external user\", \"4. Enter external email address\", \"5. Send invitation\"],\n  checkAppRegistration: [\"1. Go to Azure Active Directory → App registrations\", \"2. Find your app (9a2a5624-5ed7-4449-b2b0-e1862e68fdcc)\", \"3. Check Authentication → Supported account types\", \"4. Verify Redirect URIs include http://localhost:3000/\", \"5. Check API permissions\"]\n};","map":{"version":3,"names":["tenantInfo","tenantId","clientId","organizationName","expectedDomains","isValidTenantEmail","email","some","domain","toLowerCase","endsWith","getTenantLoginUrl","getAzurePortalUrl","userManagementInstructions","addInternalUser","addExternalUser","checkAppRegistration"],"sources":["C:/Final System/online-attendance-system-nenasa/Frontend/frontend-app/src/tenantInfo.js"],"sourcesContent":["// Tenant Information Helper\r\nexport const tenantInfo = {\r\n  tenantId: \"a7a43c95-55b0-4d14-98c5-a7478dfb87d3\",\r\n  clientId: \"9a2a5624-5ed7-4449-b2b0-e1862e68fdcc\",\r\n  organizationName: \"Nenasala Higher Education\",\r\n  \r\n  // Common domains for this tenant\r\n  expectedDomains: [\r\n    \"@nenasa.edu.lk\", // Custom domain for NENASA\r\n    \"@yourdomain.onmicrosoft.com\", // Replace with your actual domain\r\n    \"@yourdomain.com\" // If you have a custom domain\r\n  ],\r\n  \r\n  // Check if email belongs to this tenant\r\n  isValidTenantEmail: (email) => {\r\n    if (!email) return false;\r\n    \r\n    return tenantInfo.expectedDomains.some(domain => \r\n      email.toLowerCase().endsWith(domain.toLowerCase())\r\n    );\r\n  },\r\n  \r\n  // Get tenant login URL\r\n  getTenantLoginUrl: () => {\r\n    return `https://login.microsoftonline.com/${tenantInfo.tenantId}`;\r\n  },\r\n  \r\n  // Get Azure portal URL for this tenant\r\n  getAzurePortalUrl: () => {\r\n    return `https://portal.azure.com/#@${tenantInfo.tenantId}`;\r\n  }\r\n};\r\n\r\n// Instructions for adding users\r\nexport const userManagementInstructions = {\r\n  addInternalUser: [\r\n    \"1. Go to https://portal.azure.com\",\r\n    \"2. Navigate to Azure Active Directory\",\r\n    \"3. Click Users → All users → + New user → Create user\",\r\n    \"4. Fill in user details with @yourdomain.onmicrosoft.com email\",\r\n    \"5. Assign appropriate licenses and groups\"\r\n  ],\r\n  \r\n  addExternalUser: [\r\n    \"1. Go to https://portal.azure.com\",\r\n    \"2. Navigate to Azure Active Directory\", \r\n    \"3. Click Users → All users → + New user → Invite external user\",\r\n    \"4. Enter external email address\",\r\n    \"5. Send invitation\"\r\n  ],\r\n  \r\n  checkAppRegistration: [\r\n    \"1. Go to Azure Active Directory → App registrations\",\r\n    \"2. Find your app (9a2a5624-5ed7-4449-b2b0-e1862e68fdcc)\",\r\n    \"3. Check Authentication → Supported account types\",\r\n    \"4. Verify Redirect URIs include http://localhost:3000/\",\r\n    \"5. Check API permissions\"\r\n  ]\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG;EACxBC,QAAQ,EAAE,sCAAsC;EAChDC,QAAQ,EAAE,sCAAsC;EAChDC,gBAAgB,EAAE,2BAA2B;EAE7C;EACAC,eAAe,EAAE,CACf,gBAAgB;EAAE;EAClB,6BAA6B;EAAE;EAC/B,iBAAiB,CAAC;EAAA,CACnB;EAED;EACAC,kBAAkB,EAAGC,KAAK,IAAK;IAC7B,IAAI,CAACA,KAAK,EAAE,OAAO,KAAK;IAExB,OAAON,UAAU,CAACI,eAAe,CAACG,IAAI,CAACC,MAAM,IAC3CF,KAAK,CAACG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,MAAM,CAACC,WAAW,CAAC,CAAC,CACnD,CAAC;EACH,CAAC;EAED;EACAE,iBAAiB,EAAEA,CAAA,KAAM;IACvB,OAAO,qCAAqCX,UAAU,CAACC,QAAQ,EAAE;EACnE,CAAC;EAED;EACAW,iBAAiB,EAAEA,CAAA,KAAM;IACvB,OAAO,8BAA8BZ,UAAU,CAACC,QAAQ,EAAE;EAC5D;AACF,CAAC;;AAED;AACA,OAAO,MAAMY,0BAA0B,GAAG;EACxCC,eAAe,EAAE,CACf,mCAAmC,EACnC,uCAAuC,EACvC,uDAAuD,EACvD,gEAAgE,EAChE,2CAA2C,CAC5C;EAEDC,eAAe,EAAE,CACf,mCAAmC,EACnC,uCAAuC,EACvC,gEAAgE,EAChE,iCAAiC,EACjC,oBAAoB,CACrB;EAEDC,oBAAoB,EAAE,CACpB,qDAAqD,EACrD,yDAAyD,EACzD,mDAAmD,EACnD,wDAAwD,EACxD,0BAA0B;AAE9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}