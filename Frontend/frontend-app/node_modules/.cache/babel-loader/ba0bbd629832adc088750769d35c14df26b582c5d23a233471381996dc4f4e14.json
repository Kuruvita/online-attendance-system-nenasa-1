{"ast":null,"code":"// Class service for API calls\nconst API_BASE_URL = \"http://localhost:8000\";\n\n// Get all classes\nexport const getAllClasses = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/class`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch classes\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching classes:\", error);\n    throw error;\n  }\n};\n\n// Get class by ID\nexport const getClassById = async classId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/class/${classId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch class\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching class:\", error);\n    throw error;\n  }\n};\n\n// Create a new class\nexport const createClass = async classData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/class`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(classData)\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Failed to create class\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error creating class:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getAllClasses","response","fetch","method","headers","ok","Error","json","error","console","getClassById","classId","createClass","classData","body","JSON","stringify","message"],"sources":["C:/Final System/online-attendance-system-nenasa/Frontend/frontend-app/src/services/classService.js"],"sourcesContent":["// Class service for API calls\r\nconst API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Get all classes\r\nexport const getAllClasses = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/class`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch classes\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching classes:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get class by ID\r\nexport const getClassById = async (classId) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/class/${classId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch class\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching class:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new class\r\nexport const createClass = async (classData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/class`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(classData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.message || \"Failed to create class\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error creating class:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,uBAAuB;;AAE5C;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,QAAQ,EAAE;MACpDI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG,MAAOC,OAAO,IAAK;EAC7C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,UAAUY,OAAO,EAAE,EAAE;MAC/DR,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,WAAW,GAAG,MAAOC,SAAS,IAAK;EAC9C,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,QAAQ,EAAE;MACpDI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,SAAS;IAChC,CAAC,CAAC;IAEF,IAAI,CAACZ,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAMG,KAAK,GAAG,MAAMP,QAAQ,CAACM,IAAI,CAAC,CAAC;MACnC,MAAM,IAAID,KAAK,CAACE,KAAK,CAACS,OAAO,IAAI,wBAAwB,CAAC;IAC5D;IAEA,OAAO,MAAMhB,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}