{"ast":null,"code":"// Student service for API calls\nconst API_BASE_URL = \"http://localhost:8000\";\n\n// Create a new student\nexport const createStudent = async studentData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/student`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(studentData)\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Failed to create student\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error creating student:\", error);\n    throw error;\n  }\n};\n\n// Get all students\nexport const getAllStudents = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/student`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch students\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching students:\", error);\n    throw error;\n  }\n};\n\n// Get student by ID\nexport const getStudentById = async studentId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/student/${studentId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch student\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching student:\", error);\n    throw error;\n  }\n};\n\n// Update student\nexport const updateStudent = async (studentId, studentData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/student/${studentId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(studentData)\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Failed to update student\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error updating student:\", error);\n    throw error;\n  }\n};\n\n// Delete student\nexport const deleteStudent = async studentId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/student/${studentId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to delete student\");\n    }\n    return true;\n  } catch (error) {\n    console.error(\"Error deleting student:\", error);\n    throw error;\n  }\n};\n\n// Lookup student by registration number\n// Note: This uses the user service endpoint since there's no dedicated endpoint in student controller\nexport const lookupStudentByRegisterNumber = async registerNumber => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/users/by-register/${registerNumber}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      if (response.status === 404) {\n        return null; // Student not found\n      }\n      throw new Error(\"Failed to lookup student\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error looking up student:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","createStudent","studentData","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","message","console","getAllStudents","getStudentById","studentId","updateStudent","deleteStudent","lookupStudentByRegisterNumber","registerNumber","status"],"sources":["C:/Final System/online-attendance-system-nenasa/Frontend/frontend-app/src/services/studentService.js"],"sourcesContent":["// Student service for API calls\r\nconst API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Create a new student\r\nexport const createStudent = async (studentData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/student`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(studentData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.message || \"Failed to create student\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error creating student:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all students\r\nexport const getAllStudents = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/student`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch students\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching students:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get student by ID\r\nexport const getStudentById = async (studentId) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/student/${studentId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch student\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching student:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update student\r\nexport const updateStudent = async (studentId, studentData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/student/${studentId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(studentData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.message || \"Failed to update student\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error updating student:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete student\r\nexport const deleteStudent = async (studentId) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/student/${studentId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to delete student\");\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error deleting student:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Lookup student by registration number\r\n// Note: This uses the user service endpoint since there's no dedicated endpoint in student controller\r\nexport const lookupStudentByRegisterNumber = async (registerNumber) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/users/by-register/${registerNumber}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      if (response.status === 404) {\r\n        return null; // Student not found\r\n      }\r\n      throw new Error(\"Failed to lookup student\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error looking up student:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}