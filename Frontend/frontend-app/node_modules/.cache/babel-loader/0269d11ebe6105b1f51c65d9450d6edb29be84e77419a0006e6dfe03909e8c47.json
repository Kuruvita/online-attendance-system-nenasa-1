{"ast":null,"code":"// Course service for API calls\nconst API_BASE_URL = \"http://localhost:8000\";\n\n// Get all courses\nexport const getAllCourses = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/course`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch courses\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching courses:\", error);\n    throw error;\n  }\n};\n\n// Get active courses only\nexport const getActiveCourses = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/course/active`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch active courses\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching active courses:\", error);\n    throw error;\n  }\n};\n\n// Get course by ID\nexport const getCourseById = async courseId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/course/${courseId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch course\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching course:\", error);\n    throw error;\n  }\n};\n\n// Create a new course\nexport const createCourse = async courseData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/course`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(courseData)\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Failed to create course\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error creating course:\", error);\n    throw error;\n  }\n};\n\n// Update a course\nexport const updateCourse = async (courseId, courseData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/course/${courseId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(courseData)\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Failed to update course\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error updating course:\", error);\n    throw error;\n  }\n};\n\n// Delete a course\nexport const deleteCourse = async courseId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/course/${courseId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to delete course\");\n    }\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error(\"Error deleting course:\", error);\n    throw error;\n  }\n};\n\n// Update enrollment count\nexport const updateEnrollmentCount = async (courseId, count) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/course/${courseId}/enrollment/${count}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to update enrollment count\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error updating enrollment count:\", error);\n    throw error;\n  }\n};\n\n// Get all teachers\nexport const getAllTeachers = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/course/teachers/all`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch teachers\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching teachers:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getAllCourses","response","fetch","method","headers","ok","Error","json","error","console","getActiveCourses","getCourseById","courseId","createCourse","courseData","body","JSON","stringify","message","updateCourse","deleteCourse","success","updateEnrollmentCount","count","getAllTeachers"],"sources":["C:/Final System/online-attendance-system-nenasa/Frontend/frontend-app/src/services/courseService.js"],"sourcesContent":["// Course service for API calls\r\nconst API_BASE_URL = \"http://localhost:8000\";\r\n\r\n// Get all courses\r\nexport const getAllCourses = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/course`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch courses\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching courses:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get active courses only\r\nexport const getActiveCourses = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/course/active`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch active courses\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching active courses:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get course by ID\r\nexport const getCourseById = async (courseId) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/course/${courseId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch course\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching course:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new course\r\nexport const createCourse = async (courseData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/course`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(courseData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.message || \"Failed to create course\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error creating course:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update a course\r\nexport const updateCourse = async (courseId, courseData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/course/${courseId}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(courseData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.message || \"Failed to update course\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error updating course:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a course\r\nexport const deleteCourse = async (courseId) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/course/${courseId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to delete course\");\r\n    }\r\n\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Error deleting course:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update enrollment count\r\nexport const updateEnrollmentCount = async (courseId, count) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/course/${courseId}/enrollment/${count}`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to update enrollment count\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error updating enrollment count:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all teachers\r\nexport const getAllTeachers = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/course/teachers/all`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch teachers\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching teachers:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}