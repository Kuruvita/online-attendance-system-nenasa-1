{"ast":null,"code":"var _jsxFileName = \"C:\\\\Final System\\\\online-attendance-system-nenasa\\\\Frontend\\\\frontend-app\\\\src\\\\AttendanceMarking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport QrScanner from \"qr-scanner\";\nimport { useMsal } from \"@azure/msal-react\";\nimport \"./AttendanceMarking.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceMarking = () => {\n  _s();\n  const {\n    accounts\n  } = useMsal();\n  const [userRole, setUserRole] = useState(\"student\");\n  const [markingMode, setMarkingMode] = useState(\"manual\"); // 'manual' or 'qr'\n  const [classes, setClasses] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n  const [students, setStudents] = useState([]);\n  const [attendance, setAttendance] = useState({});\n  const [qrCode, setQrCode] = useState(\"\");\n  const [scanning, setScanning] = useState(false);\n  const [scanResult, setScanResult] = useState(\"\");\n  const [cameraError, setCameraError] = useState(\"\");\n  const [cameraPermission, setCameraPermission] = useState(null);\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n  useEffect(() => {\n    fetchUserRole();\n    fetchClasses();\n    checkCameraPermission();\n  }, [accounts]);\n\n  // Cleanup camera stream on component unmount\n  useEffect(() => {\n    return () => {\n      stopQRScanning();\n    };\n  }, []);\n  const fetchUserRole = async () => {\n    try {\n      if (accounts.length > 0) {\n        const user = accounts[0];\n        // Use the email from Azure AD account\n        const userEmail = user.username || user.name;\n        console.log(\"Fetching user role for:\", userEmail);\n        const response = await fetch(`http://localhost:8000/users/profile/${userEmail}`);\n        if (response.ok) {\n          const userData = await response.json();\n          setUserRole(userData.role);\n          console.log(\"User role fetched:\", userData.role);\n        } else {\n          console.error(\"Failed to fetch user role:\", response.status);\n          // Default to student if user not found\n          setUserRole(\"student\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching user role:\", error);\n      // Default to student on error\n      setUserRole(\"student\");\n    }\n  };\n  const checkCameraPermission = async () => {\n    try {\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        setCameraPermission(\"not_supported\");\n        setCameraError(\"Camera is not supported on this device\");\n        return;\n      }\n\n      // Check if camera permission is already granted\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      stream.getTracks().forEach(track => track.stop()); // Stop the stream immediately\n      setCameraPermission(\"granted\");\n      setCameraError(\"\");\n    } catch (error) {\n      console.error(\"Camera permission check failed:\", error);\n      if (error.name === \"NotAllowedError\") {\n        setCameraPermission(\"denied\");\n        setCameraError(\"Camera access denied. Please allow camera access in your browser settings.\");\n      } else if (error.name === \"NotFoundError\") {\n        setCameraPermission(\"not_found\");\n        setCameraError(\"No camera device found on this device.\");\n      } else {\n        setCameraPermission(\"error\");\n        setCameraError(\"Unable to access camera: \" + error.message);\n      }\n    }\n  };\n  const fetchClasses = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/class\");\n      if (response.ok) {\n        const classData = await response.json();\n        setClasses(classData);\n      }\n    } catch (error) {\n      console.error(\"Error fetching classes:\", error);\n      // Mock data for demo\n      setClasses([{\n        id: 1,\n        name: \"Grade 12 - Physics\",\n        code: \"PHY12\"\n      }, {\n        id: 2,\n        name: \"Grade 11 - Chemistry\",\n        code: \"CHE11\"\n      }, {\n        id: 3,\n        name: \"Grade 10 - Biology\",\n        code: \"BIO10\"\n      }]);\n    }\n  };\n  const fetchStudents = async classId => {\n    try {\n      if (!classId) {\n        setStudents([]);\n        setAttendance({});\n        return;\n      }\n\n      // Get the selected class information\n      const selectedClassInfo = classes.find(c => c.id === parseInt(classId));\n      if (!selectedClassInfo) {\n        console.error(\"Selected class not found\");\n        setStudents([]);\n        setAttendance({});\n        return;\n      }\n\n      // Fetch students from the student endpoint instead of users\n      const studentsResponse = await fetch(\"http://localhost:8000/student\");\n      if (studentsResponse.ok) {\n        const allStudents = await studentsResponse.json();\n\n        // Filter students who are enrolled in the selected class\n        // Check if any of their subjects (sub_1, sub_2, sub_3, sub_4) match the class name\n        const enrolledStudents = allStudents.filter(student => {\n          const studentSubjects = [student.sub_1, student.sub_2, student.sub_3, student.sub_4].filter(Boolean); // Remove null/undefined values\n\n          // Check if any of the student's subjects match the selected class name\n          return studentSubjects.some(subject => subject.toLowerCase() === selectedClassInfo.name.toLowerCase());\n        });\n        console.log(`Found ${enrolledStudents.length} students enrolled in ${selectedClassInfo.name}`);\n        setStudents(enrolledStudents);\n\n        // Initialize attendance state\n        const initialAttendance = {};\n        enrolledStudents.forEach(student => {\n          initialAttendance[student.id] = \"absent\";\n        });\n        setAttendance(initialAttendance);\n      } else {\n        console.error(\"Failed to fetch students:\", studentsResponse.status);\n        setStudents([]);\n        setAttendance({});\n      }\n    } catch (error) {\n      console.error(\"Error fetching students:\", error);\n      setStudents([]);\n      setAttendance({});\n    }\n  };\n  const generateQRCode = () => {\n    if (!selectedClass) return;\n    const classData = classes.find(c => c.id === parseInt(selectedClass));\n    const teacherInfo = accounts[0];\n    const qrData = {\n      classId: selectedClass,\n      className: classData === null || classData === void 0 ? void 0 : classData.name,\n      timestamp: Date.now(),\n      teacherId: (teacherInfo === null || teacherInfo === void 0 ? void 0 : teacherInfo.username) || (teacherInfo === null || teacherInfo === void 0 ? void 0 : teacherInfo.name),\n      action: \"mark_attendance\",\n      validUntil: Date.now() + 30 * 60 * 1000 // Valid for 30 minutes\n    };\n    console.log(\"Generated QR Code data:\", qrData);\n    setQrCode(JSON.stringify(qrData));\n  };\n  const startQRScanning = async () => {\n    try {\n      setScanning(true);\n      setScanResult(\"\");\n      setCameraError(\"\");\n\n      // Check if camera is available\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        throw new Error(\"Camera not supported on this device\");\n      }\n\n      // Request camera permission explicitly\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: \"environment\",\n          // Prefer back camera for QR scanning\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          }\n        }\n      });\n      if (videoRef.current) {\n        // Set the video source\n        videoRef.current.srcObject = stream;\n        const qrScanner = new QrScanner(videoRef.current, result => {\n          console.log(\"QR Code detected:\", result.data);\n          setScanResult(result.data);\n          markAttendanceFromQR(result.data);\n          stopQRScanning();\n        }, {\n          highlightScanRegion: true,\n          highlightCodeOutline: true,\n          returnDetailedScanResult: true,\n          preferredCamera: \"environment\"\n        });\n        qrScannerRef.current = qrScanner;\n        await qrScanner.start();\n        console.log(\"QR Scanner started successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error starting QR scanner:\", error);\n      setScanning(false);\n\n      // Set specific error messages based on error type\n      if (error.name === \"NotAllowedError\") {\n        setCameraError(\"Camera access denied. Please click on the camera icon in your browser's address bar and allow camera access.\");\n      } else if (error.name === \"NotFoundError\") {\n        setCameraError(\"No camera found on this device. Please ensure your device has a working camera.\");\n      } else if (error.name === \"NotReadableError\") {\n        setCameraError(\"Camera is already in use by another application. Please close other camera applications and try again.\");\n      } else if (error.name === \"OverconstrainedError\") {\n        setCameraError(\"Camera settings are not supported. Trying with default settings...\");\n        // Retry with basic camera settings\n        retryWithBasicCamera();\n      } else {\n        setCameraError(\"Failed to start camera: \" + error.message);\n      }\n    }\n  };\n  const retryWithBasicCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        const qrScanner = new QrScanner(videoRef.current, result => {\n          console.log(\"QR Code detected:\", result.data);\n          setScanResult(result.data);\n          markAttendanceFromQR(result.data);\n          stopQRScanning();\n        });\n        qrScannerRef.current = qrScanner;\n        await qrScanner.start();\n        setScanning(true);\n        setCameraError(\"\");\n        console.log(\"QR Scanner started with basic settings\");\n      }\n    } catch (retryError) {\n      console.error(\"Retry with basic camera failed:\", retryError);\n      setCameraError(\"Unable to access camera even with basic settings.\");\n      setScanning(false);\n    }\n  };\n  const stopQRScanning = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n      qrScannerRef.current = null;\n    }\n\n    // Stop the camera stream\n    if (videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setScanning(false);\n    setCameraError(\"\");\n  };\n  const markAttendanceFromQR = async qrData => {\n    try {\n      const data = JSON.parse(qrData);\n      console.log(\"QR Data received:\", data);\n      if (data.classId && userRole === \"student\") {\n        // Get current user info\n        const currentUser = accounts[0];\n        const userEmail = currentUser.username || currentUser.name;\n\n        // Find the current user in the backend to get their ID\n        const response = await fetch(`http://localhost:8000/users/profile/${userEmail}`);\n        if (response.ok) {\n          const userData = await response.json();\n          console.log(\"Current user data:\", userData);\n\n          // Mark attendance for this student\n          const attendanceData = {\n            classId: parseInt(data.classId),\n            date: new Date().toISOString().split(\"T\")[0],\n            attendance: [{\n              studentId: userData.id,\n              status: \"present\",\n              timestamp: new Date().toISOString()\n            }]\n          };\n          console.log(\"Submitting attendance:\", attendanceData);\n          const attendanceResponse = await fetch(\"http://localhost:8000/attendance\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(attendanceData)\n          });\n          if (attendanceResponse.ok) {\n            alert(\"Attendance marked successfully!\");\n            console.log(\"Attendance saved successfully\");\n          } else {\n            const errorData = await attendanceResponse.json();\n            console.error(\"Failed to save attendance:\", errorData);\n            alert(\"Failed to save attendance: \" + (errorData.message || \"Unknown error\"));\n          }\n        } else {\n          alert(\"User not found in system!\");\n        }\n      } else {\n        alert(\"Invalid QR code or unauthorized access!\");\n      }\n    } catch (error) {\n      console.error(\"Error processing QR code:\", error);\n      alert(\"Invalid QR code format!\");\n    }\n  };\n  const handleAttendanceChange = (studentId, status) => {\n    setAttendance(prev => ({\n      ...prev,\n      [studentId]: status\n    }));\n  };\n  const handleClassChange = classId => {\n    setSelectedClass(classId);\n    if (classId) {\n      fetchStudents(classId);\n    }\n  };\n  const saveAttendance = async () => {\n    try {\n      const attendanceData = {\n        classId: selectedClass,\n        date: new Date().toISOString().split(\"T\")[0],\n        attendance: Object.entries(attendance).map(([studentId, status]) => ({\n          studentId: parseInt(studentId),\n          status,\n          timestamp: new Date().toISOString()\n        }))\n      };\n      const response = await fetch(\"http://localhost:8000/attendance\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(attendanceData)\n      });\n      if (response.ok) {\n        alert(\"Attendance saved successfully!\");\n      } else {\n        alert(\"Failed to save attendance!\");\n      }\n    } catch (error) {\n      console.error(\"Error saving attendance:\", error);\n      alert(\"Error saving attendance!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attendance-marking\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Attendance Marking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), (userRole === \"teacher\" || userRole === \"admin\") && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: markingMode === \"manual\" ? \"active\" : \"\",\n          onClick: () => setMarkingMode(\"manual\"),\n          children: \"\\uD83D\\uDCDD Manual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: markingMode === \"qr\" ? \"active\" : \"\",\n          onClick: () => setMarkingMode(\"qr\"),\n          children: \"\\uD83D\\uDCF1 QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this), userRole === \"teacher\" || userRole === \"admin\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"teacher-interface\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"class-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Class:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedClass,\n          onChange: e => handleClassChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Class --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), classes.map(cls => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cls.id,\n            children: [cls.name, cls.code ? ` (${cls.code})` : \"\"]\n          }, cls.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), markingMode === \"qr\" && selectedClass && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qr-generation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"QR Code for Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateQRCode,\n          className: \"generate-qr-btn\",\n          children: \"Generate QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this), qrCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qr-display\",\n          children: [/*#__PURE__*/_jsxDEV(QRCode, {\n            value: qrCode,\n            size: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Students can scan this QR code to mark attendance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 13\n      }, this), markingMode === \"manual\" && selectedClass && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manual-attendance\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Mark Attendance Manually\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 15\n        }, this), students.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-list\",\n          children: students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"student-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"student-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"student-name\",\n                children: student.name || student.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"student-email\",\n                children: student.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attendance-options\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `attendance-${student.id}`,\n                  value: \"present\",\n                  checked: attendance[student.id] === \"present\",\n                  onChange: e => handleAttendanceChange(student.id, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 27\n                }, this), \"Present\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `attendance-${student.id}`,\n                  value: \"absent\",\n                  checked: attendance[student.id] === \"absent\",\n                  onChange: e => handleAttendanceChange(student.id, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 27\n                }, this), \"Absent\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `attendance-${student.id}`,\n                  value: \"late\",\n                  checked: attendance[student.id] === \"late\",\n                  onChange: e => handleAttendanceChange(student.id, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 27\n                }, this), \"Late\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 23\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-students-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No students are enrolled in the selected class.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please check the class selection or ensure students are properly enrolled.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 17\n        }, this), students.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveAttendance,\n          className: \"save-attendance-btn\",\n          children: \"Save Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-restricted\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"access-denied\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restriction-icon\",\n          children: \"\\uD83D\\uDEAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Access Restricted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Students are not allowed to mark their own attendance.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please contact your teacher or administrator if you need to report your attendance.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDCCB How Attendance Works:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2705 Teachers mark attendance using this system\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\uD83D\\uDCE7 You'll receive email notifications about your attendance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\uD83D\\uDC40 You can view your attendance history in your dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\uD83D\\uDCDE Contact your teacher for attendance corrections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDCDE Need Help?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Contact your class teacher or school administration for attendance-related inquiries.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceMarking, \"6qMy6DWLiR7SU/3d61O2i3o9j/o=\", false, function () {\n  return [useMsal];\n});\n_c = AttendanceMarking;\nexport default AttendanceMarking;\nvar _c;\n$RefreshReg$(_c, \"AttendanceMarking\");","map":{"version":3,"names":["React","useState","useEffect","useRef","QRCode","QrScanner","useMsal","jsxDEV","_jsxDEV","AttendanceMarking","_s","accounts","userRole","setUserRole","markingMode","setMarkingMode","classes","setClasses","selectedClass","setSelectedClass","students","setStudents","attendance","setAttendance","qrCode","setQrCode","scanning","setScanning","scanResult","setScanResult","cameraError","setCameraError","cameraPermission","setCameraPermission","videoRef","qrScannerRef","fetchUserRole","fetchClasses","checkCameraPermission","stopQRScanning","length","user","userEmail","username","name","console","log","response","fetch","ok","userData","json","role","error","status","navigator","mediaDevices","getUserMedia","stream","video","getTracks","forEach","track","stop","message","classData","id","code","fetchStudents","classId","selectedClassInfo","find","c","parseInt","studentsResponse","allStudents","enrolledStudents","filter","student","studentSubjects","sub_1","sub_2","sub_3","sub_4","Boolean","some","subject","toLowerCase","initialAttendance","generateQRCode","teacherInfo","qrData","className","timestamp","Date","now","teacherId","action","validUntil","JSON","stringify","startQRScanning","Error","facingMode","width","ideal","height","current","srcObject","qrScanner","result","data","markAttendanceFromQR","highlightScanRegion","highlightCodeOutline","returnDetailedScanResult","preferredCamera","start","retryWithBasicCamera","retryError","tracks","parse","currentUser","attendanceData","date","toISOString","split","studentId","attendanceResponse","method","headers","body","alert","errorData","handleAttendanceChange","prev","handleClassChange","saveAttendance","Object","entries","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","cls","size","email","type","checked","_c","$RefreshReg$"],"sources":["C:/Final System/online-attendance-system-nenasa/Frontend/frontend-app/src/AttendanceMarking.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport QRCode from \"react-qr-code\";\r\nimport QrScanner from \"qr-scanner\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport \"./AttendanceMarking.css\";\r\n\r\nconst AttendanceMarking = () => {\r\n  const { accounts } = useMsal();\r\n  const [userRole, setUserRole] = useState(\"student\");\r\n  const [markingMode, setMarkingMode] = useState(\"manual\"); // 'manual' or 'qr'\r\n  const [classes, setClasses] = useState([]);\r\n  const [selectedClass, setSelectedClass] = useState(\"\");\r\n  const [students, setStudents] = useState([]);\r\n  const [attendance, setAttendance] = useState({});\r\n  const [qrCode, setQrCode] = useState(\"\");\r\n  const [scanning, setScanning] = useState(false);\r\n  const [scanResult, setScanResult] = useState(\"\");\r\n  const [cameraError, setCameraError] = useState(\"\");\r\n  const [cameraPermission, setCameraPermission] = useState(null);\r\n  const videoRef = useRef(null);\r\n  const qrScannerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchUserRole();\r\n    fetchClasses();\r\n    checkCameraPermission();\r\n  }, [accounts]);\r\n\r\n  // Cleanup camera stream on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      stopQRScanning();\r\n    };\r\n  }, []);\r\n\r\n  const fetchUserRole = async () => {\r\n    try {\r\n      if (accounts.length > 0) {\r\n        const user = accounts[0];\r\n        // Use the email from Azure AD account\r\n        const userEmail = user.username || user.name;\r\n        console.log(\"Fetching user role for:\", userEmail);\r\n\r\n        const response = await fetch(\r\n          `http://localhost:8000/users/profile/${userEmail}`\r\n        );\r\n        if (response.ok) {\r\n          const userData = await response.json();\r\n          setUserRole(userData.role);\r\n          console.log(\"User role fetched:\", userData.role);\r\n        } else {\r\n          console.error(\"Failed to fetch user role:\", response.status);\r\n          // Default to student if user not found\r\n          setUserRole(\"student\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching user role:\", error);\r\n      // Default to student on error\r\n      setUserRole(\"student\");\r\n    }\r\n  };\r\n\r\n  const checkCameraPermission = async () => {\r\n    try {\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        setCameraPermission(\"not_supported\");\r\n        setCameraError(\"Camera is not supported on this device\");\r\n        return;\r\n      }\r\n\r\n      // Check if camera permission is already granted\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      stream.getTracks().forEach((track) => track.stop()); // Stop the stream immediately\r\n      setCameraPermission(\"granted\");\r\n      setCameraError(\"\");\r\n    } catch (error) {\r\n      console.error(\"Camera permission check failed:\", error);\r\n      if (error.name === \"NotAllowedError\") {\r\n        setCameraPermission(\"denied\");\r\n        setCameraError(\r\n          \"Camera access denied. Please allow camera access in your browser settings.\"\r\n        );\r\n      } else if (error.name === \"NotFoundError\") {\r\n        setCameraPermission(\"not_found\");\r\n        setCameraError(\"No camera device found on this device.\");\r\n      } else {\r\n        setCameraPermission(\"error\");\r\n        setCameraError(\"Unable to access camera: \" + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchClasses = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/class\");\r\n      if (response.ok) {\r\n        const classData = await response.json();\r\n        setClasses(classData);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching classes:\", error);\r\n      // Mock data for demo\r\n      setClasses([\r\n        { id: 1, name: \"Grade 12 - Physics\", code: \"PHY12\" },\r\n        { id: 2, name: \"Grade 11 - Chemistry\", code: \"CHE11\" },\r\n        { id: 3, name: \"Grade 10 - Biology\", code: \"BIO10\" },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const fetchStudents = async (classId) => {\r\n    try {\r\n      if (!classId) {\r\n        setStudents([]);\r\n        setAttendance({});\r\n        return;\r\n      }\r\n\r\n      // Get the selected class information\r\n      const selectedClassInfo = classes.find((c) => c.id === parseInt(classId));\r\n      if (!selectedClassInfo) {\r\n        console.error(\"Selected class not found\");\r\n        setStudents([]);\r\n        setAttendance({});\r\n        return;\r\n      }\r\n\r\n      // Fetch students from the student endpoint instead of users\r\n      const studentsResponse = await fetch(\"http://localhost:8000/student\");\r\n      if (studentsResponse.ok) {\r\n        const allStudents = await studentsResponse.json();\r\n\r\n        // Filter students who are enrolled in the selected class\r\n        // Check if any of their subjects (sub_1, sub_2, sub_3, sub_4) match the class name\r\n        const enrolledStudents = allStudents.filter((student) => {\r\n          const studentSubjects = [\r\n            student.sub_1,\r\n            student.sub_2,\r\n            student.sub_3,\r\n            student.sub_4,\r\n          ].filter(Boolean); // Remove null/undefined values\r\n\r\n          // Check if any of the student's subjects match the selected class name\r\n          return studentSubjects.some(\r\n            (subject) =>\r\n              subject.toLowerCase() === selectedClassInfo.name.toLowerCase()\r\n          );\r\n        });\r\n\r\n        console.log(\r\n          `Found ${enrolledStudents.length} students enrolled in ${selectedClassInfo.name}`\r\n        );\r\n        setStudents(enrolledStudents);\r\n\r\n        // Initialize attendance state\r\n        const initialAttendance = {};\r\n        enrolledStudents.forEach((student) => {\r\n          initialAttendance[student.id] = \"absent\";\r\n        });\r\n        setAttendance(initialAttendance);\r\n      } else {\r\n        console.error(\"Failed to fetch students:\", studentsResponse.status);\r\n        setStudents([]);\r\n        setAttendance({});\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching students:\", error);\r\n      setStudents([]);\r\n      setAttendance({});\r\n    }\r\n  };\r\n\r\n  const generateQRCode = () => {\r\n    if (!selectedClass) return;\r\n\r\n    const classData = classes.find((c) => c.id === parseInt(selectedClass));\r\n    const teacherInfo = accounts[0];\r\n\r\n    const qrData = {\r\n      classId: selectedClass,\r\n      className: classData?.name,\r\n      timestamp: Date.now(),\r\n      teacherId: teacherInfo?.username || teacherInfo?.name,\r\n      action: \"mark_attendance\",\r\n      validUntil: Date.now() + 30 * 60 * 1000, // Valid for 30 minutes\r\n    };\r\n\r\n    console.log(\"Generated QR Code data:\", qrData);\r\n    setQrCode(JSON.stringify(qrData));\r\n  };\r\n\r\n  const startQRScanning = async () => {\r\n    try {\r\n      setScanning(true);\r\n      setScanResult(\"\");\r\n      setCameraError(\"\");\r\n\r\n      // Check if camera is available\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        throw new Error(\"Camera not supported on this device\");\r\n      }\r\n\r\n      // Request camera permission explicitly\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          facingMode: \"environment\", // Prefer back camera for QR scanning\r\n          width: { ideal: 1280 },\r\n          height: { ideal: 720 },\r\n        },\r\n      });\r\n\r\n      if (videoRef.current) {\r\n        // Set the video source\r\n        videoRef.current.srcObject = stream;\r\n\r\n        const qrScanner = new QrScanner(\r\n          videoRef.current,\r\n          (result) => {\r\n            console.log(\"QR Code detected:\", result.data);\r\n            setScanResult(result.data);\r\n            markAttendanceFromQR(result.data);\r\n            stopQRScanning();\r\n          },\r\n          {\r\n            highlightScanRegion: true,\r\n            highlightCodeOutline: true,\r\n            returnDetailedScanResult: true,\r\n            preferredCamera: \"environment\",\r\n          }\r\n        );\r\n\r\n        qrScannerRef.current = qrScanner;\r\n        await qrScanner.start();\r\n        console.log(\"QR Scanner started successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error starting QR scanner:\", error);\r\n      setScanning(false);\r\n\r\n      // Set specific error messages based on error type\r\n      if (error.name === \"NotAllowedError\") {\r\n        setCameraError(\r\n          \"Camera access denied. Please click on the camera icon in your browser's address bar and allow camera access.\"\r\n        );\r\n      } else if (error.name === \"NotFoundError\") {\r\n        setCameraError(\r\n          \"No camera found on this device. Please ensure your device has a working camera.\"\r\n        );\r\n      } else if (error.name === \"NotReadableError\") {\r\n        setCameraError(\r\n          \"Camera is already in use by another application. Please close other camera applications and try again.\"\r\n        );\r\n      } else if (error.name === \"OverconstrainedError\") {\r\n        setCameraError(\r\n          \"Camera settings are not supported. Trying with default settings...\"\r\n        );\r\n        // Retry with basic camera settings\r\n        retryWithBasicCamera();\r\n      } else {\r\n        setCameraError(\"Failed to start camera: \" + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const retryWithBasicCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n\r\n        const qrScanner = new QrScanner(videoRef.current, (result) => {\r\n          console.log(\"QR Code detected:\", result.data);\r\n          setScanResult(result.data);\r\n          markAttendanceFromQR(result.data);\r\n          stopQRScanning();\r\n        });\r\n\r\n        qrScannerRef.current = qrScanner;\r\n        await qrScanner.start();\r\n        setScanning(true);\r\n        setCameraError(\"\");\r\n        console.log(\"QR Scanner started with basic settings\");\r\n      }\r\n    } catch (retryError) {\r\n      console.error(\"Retry with basic camera failed:\", retryError);\r\n      setCameraError(\"Unable to access camera even with basic settings.\");\r\n      setScanning(false);\r\n    }\r\n  };\r\n\r\n  const stopQRScanning = () => {\r\n    if (qrScannerRef.current) {\r\n      qrScannerRef.current.stop();\r\n      qrScannerRef.current = null;\r\n    }\r\n\r\n    // Stop the camera stream\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      const tracks = videoRef.current.srcObject.getTracks();\r\n      tracks.forEach((track) => track.stop());\r\n      videoRef.current.srcObject = null;\r\n    }\r\n\r\n    setScanning(false);\r\n    setCameraError(\"\");\r\n  };\r\n\r\n  const markAttendanceFromQR = async (qrData) => {\r\n    try {\r\n      const data = JSON.parse(qrData);\r\n      console.log(\"QR Data received:\", data);\r\n\r\n      if (data.classId && userRole === \"student\") {\r\n        // Get current user info\r\n        const currentUser = accounts[0];\r\n        const userEmail = currentUser.username || currentUser.name;\r\n\r\n        // Find the current user in the backend to get their ID\r\n        const response = await fetch(\r\n          `http://localhost:8000/users/profile/${userEmail}`\r\n        );\r\n        if (response.ok) {\r\n          const userData = await response.json();\r\n          console.log(\"Current user data:\", userData);\r\n\r\n          // Mark attendance for this student\r\n          const attendanceData = {\r\n            classId: parseInt(data.classId),\r\n            date: new Date().toISOString().split(\"T\")[0],\r\n            attendance: [\r\n              {\r\n                studentId: userData.id,\r\n                status: \"present\",\r\n                timestamp: new Date().toISOString(),\r\n              },\r\n            ],\r\n          };\r\n\r\n          console.log(\"Submitting attendance:\", attendanceData);\r\n\r\n          const attendanceResponse = await fetch(\r\n            \"http://localhost:8000/attendance\",\r\n            {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(attendanceData),\r\n            }\r\n          );\r\n\r\n          if (attendanceResponse.ok) {\r\n            alert(\"Attendance marked successfully!\");\r\n            console.log(\"Attendance saved successfully\");\r\n          } else {\r\n            const errorData = await attendanceResponse.json();\r\n            console.error(\"Failed to save attendance:\", errorData);\r\n            alert(\r\n              \"Failed to save attendance: \" +\r\n                (errorData.message || \"Unknown error\")\r\n            );\r\n          }\r\n        } else {\r\n          alert(\"User not found in system!\");\r\n        }\r\n      } else {\r\n        alert(\"Invalid QR code or unauthorized access!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error processing QR code:\", error);\r\n      alert(\"Invalid QR code format!\");\r\n    }\r\n  };\r\n\r\n  const handleAttendanceChange = (studentId, status) => {\r\n    setAttendance((prev) => ({\r\n      ...prev,\r\n      [studentId]: status,\r\n    }));\r\n  };\r\n\r\n  const handleClassChange = (classId) => {\r\n    setSelectedClass(classId);\r\n    if (classId) {\r\n      fetchStudents(classId);\r\n    }\r\n  };\r\n\r\n  const saveAttendance = async () => {\r\n    try {\r\n      const attendanceData = {\r\n        classId: selectedClass,\r\n        date: new Date().toISOString().split(\"T\")[0],\r\n        attendance: Object.entries(attendance).map(([studentId, status]) => ({\r\n          studentId: parseInt(studentId),\r\n          status,\r\n          timestamp: new Date().toISOString(),\r\n        })),\r\n      };\r\n\r\n      const response = await fetch(\"http://localhost:8000/attendance\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(attendanceData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Attendance saved successfully!\");\r\n      } else {\r\n        alert(\"Failed to save attendance!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving attendance:\", error);\r\n      alert(\"Error saving attendance!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"attendance-marking\">\r\n      <div className=\"attendance-header\">\r\n        <h2>Attendance Marking</h2>\r\n        {(userRole === \"teacher\" || userRole === \"admin\") && (\r\n          <div className=\"mode-selector\">\r\n            <button\r\n              className={markingMode === \"manual\" ? \"active\" : \"\"}\r\n              onClick={() => setMarkingMode(\"manual\")}\r\n            >\r\n              📝 Manual\r\n            </button>\r\n            <button\r\n              className={markingMode === \"qr\" ? \"active\" : \"\"}\r\n              onClick={() => setMarkingMode(\"qr\")}\r\n            >\r\n              📱 QR Code\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {userRole === \"teacher\" || userRole === \"admin\" ? (\r\n        <div className=\"teacher-interface\">\r\n          <div className=\"class-selector\">\r\n            <label>Select Class:</label>\r\n            <select\r\n              value={selectedClass}\r\n              onChange={(e) => handleClassChange(e.target.value)}\r\n            >\r\n              <option value=\"\">-- Select a Class --</option>\r\n              {classes.map((cls) => (\r\n                <option key={cls.id} value={cls.id}>\r\n                  {cls.name}\r\n                  {cls.code ? ` (${cls.code})` : \"\"}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {markingMode === \"qr\" && selectedClass && (\r\n            <div className=\"qr-generation\">\r\n              <h3>QR Code for Attendance</h3>\r\n              <button onClick={generateQRCode} className=\"generate-qr-btn\">\r\n                Generate QR Code\r\n              </button>\r\n              {qrCode && (\r\n                <div className=\"qr-display\">\r\n                  <QRCode value={qrCode} size={200} />\r\n                  <p>Students can scan this QR code to mark attendance</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {markingMode === \"manual\" && selectedClass && (\r\n            <div className=\"manual-attendance\">\r\n              <h3>Mark Attendance Manually</h3>\r\n              {students.length > 0 ? (\r\n                <div className=\"student-list\">\r\n                  {students.map((student) => (\r\n                    <div key={student.id} className=\"student-row\">\r\n                      <div className=\"student-info\">\r\n                        <span className=\"student-name\">\r\n                          {student.name || student.email}\r\n                        </span>\r\n                        <span className=\"student-email\">{student.email}</span>\r\n                      </div>\r\n                      <div className=\"attendance-options\">\r\n                        <label>\r\n                          <input\r\n                            type=\"radio\"\r\n                            name={`attendance-${student.id}`}\r\n                            value=\"present\"\r\n                            checked={attendance[student.id] === \"present\"}\r\n                            onChange={(e) =>\r\n                              handleAttendanceChange(student.id, e.target.value)\r\n                            }\r\n                          />\r\n                          Present\r\n                        </label>\r\n                        <label>\r\n                          <input\r\n                            type=\"radio\"\r\n                            name={`attendance-${student.id}`}\r\n                            value=\"absent\"\r\n                            checked={attendance[student.id] === \"absent\"}\r\n                            onChange={(e) =>\r\n                              handleAttendanceChange(student.id, e.target.value)\r\n                            }\r\n                          />\r\n                          Absent\r\n                        </label>\r\n                        <label>\r\n                          <input\r\n                            type=\"radio\"\r\n                            name={`attendance-${student.id}`}\r\n                            value=\"late\"\r\n                            checked={attendance[student.id] === \"late\"}\r\n                            onChange={(e) =>\r\n                              handleAttendanceChange(student.id, e.target.value)\r\n                            }\r\n                          />\r\n                          Late\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"no-students-message\">\r\n                  <p>No students are enrolled in the selected class.</p>\r\n                  <p>\r\n                    Please check the class selection or ensure students are\r\n                    properly enrolled.\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {students.length > 0 && (\r\n                <button\r\n                  onClick={saveAttendance}\r\n                  className=\"save-attendance-btn\"\r\n                >\r\n                  Save Attendance\r\n                </button>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"student-restricted\">\r\n          <div className=\"access-denied\">\r\n            <div className=\"restriction-icon\">🚫</div>\r\n            <h2>Access Restricted</h2>\r\n            <p>Students are not allowed to mark their own attendance.</p>\r\n            <p>\r\n              Please contact your teacher or administrator if you need to report\r\n              your attendance.\r\n            </p>\r\n\r\n            <div className=\"info-box\">\r\n              <h4>📋 How Attendance Works:</h4>\r\n              <ul>\r\n                <li>✅ Teachers mark attendance using this system</li>\r\n                <li>\r\n                  📧 You'll receive email notifications about your attendance\r\n                </li>\r\n                <li>\r\n                  👀 You can view your attendance history in your dashboard\r\n                </li>\r\n                <li>📞 Contact your teacher for attendance corrections</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"contact-info\">\r\n              <h4>📞 Need Help?</h4>\r\n              <p>\r\n                Contact your class teacher or school administration for\r\n                attendance-related inquiries.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceMarking;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}